image: node:lts

variables:
  APP: ds-docs
  NODE_OPTIONS: --max-old-space-size=4096

cache:
  key: ds
  paths:
    - node_modules/

services:
  - docker:dind

stages:
  - test
  - deploy

include:
  - template: Code-Quality.gitlab-ci.yml

build:
  stage: test
  except:
    refs:
      - tags
  tags:
    - vms
  script:
    - yarn --frozen-lockfile
    - yarn lint
    - yarn build
    - yarn test:ci
    - echo "Tag version $CI_COMMIT_TAG"
    - echo "Commit ref $CI_COMMIT_REF_NAME"
    - echo "Publisher $GITLAB_USER_EMAIL"
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - echo "email = $GITLAB_USER_EMAIL" >> .npmrc
    - (if [ "$CI_COMMIT_REF_NAME" == "master" ]; then npx lerna publish from-package --no-git-tag-version --yes;fi);

docs_build:
  image: node:lts
  stage: test
  only:
    refs:
      - master
  script:
    - yarn --frozen-lockfile
    - yarn build
    - yarn npx:lerna run postinstall
    - yarn npx:lerna run build-docs
    - mv packages/portal/storybook-static/ packages/docs-site/website/build/ds-docs
    - yarn docs-build
    - mv styleguide packages/docs-site/website/build/ds-docs/styleguide
  artifacts:
    paths:
      - packages/docs-site/website/build/*

docs_deploy:
  image: docker:stable
  stage: deploy
  needs: ['docs_build']
  allow_failure: true
  only:
    refs:
      - master
  script:
    - SANITY_BRANCH=$CI_COMMIT_REF_SLUG
    - echo "Sanitized branch name ${SANITY_BRANCH}"
    - docker login $QUAY_REPO_HOST -u "$QUAY_REPO_USER" -p "$QUAY_REPO_PASS"
    - cd packages/docs-site
    - pwd
    - docker build -t ds-docs .
    - echo "Push commit image"

    - docker tag ds-docs quay.io/synerise/ds-docs:"$SANITY_BRANCH"-"${CI_COMMIT_SHA}"
    - docker push quay.io/synerise/ds-docs:"$SANITY_BRANCH"-"${CI_COMMIT_SHA}"
    - echo "Image pushed to remote repository from branch ${CI_COMMIT_REF_NAME}"

    - docker tag ds-docs quay.io/synerise/ds-docs:"$SANITY_BRANCH"-latest
    - docker push quay.io/synerise/ds-docs:"$SANITY_BRANCH"-latest
    - echo "Image pushed to remote repository from branch ${CI_COMMIT_REF_NAME} for commit ${CI_COMMIT_SHA}"
    - docker pull quay.io/synerise/stevedore:master-latest
    - docker run -e APPLICATION="${APP}" -e AUTODEPLOY_BRANCH="${SANITY_BRANCH}" -e SSHA1=${CI_COMMIT_SHA} -e AUTODEPLOY_TAG="${CI_COMMIT_TAG}" -e USERNAME="${GITLAB_USER_NAME}" --entrypoint /autodeploy.sh quay.io/synerise/stevedore:master-latest
